<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smart.keys.dao.AccountDao">
	<select id="get" parameterType="java.lang.Integer" resultType="com.smart.keys.model.po.Account">
     	SELECT 
     		* 
     	FROM 
     		T_KEYS_ACCOUNT a
     	WHERE 
     		id = #{id}
    </select>
    
	<insert id="insert" parameterType="com.smart.keys.model.po.Account" statementType="PREPARED" useGeneratedKeys="true" keyProperty="id">
		insert into T_KEYS_ACCOUNT(
			key_name, key_code, key_status, user_name, pass_word, key_desc, login_address, sort, create_time, update_time
		) VALUES (
			#{keyName}, #{keyCode}, #{keyStatus}, #{userName}, #{passWord}, #{keyDesc}, #{loginAddress}, #{sort}, #{createTime}, #{updateTime}    
		)
	</insert>
	
    <update id="update" parameterType="com.smart.keys.model.po.Account" statementType="PREPARED">
		UPDATE 
			T_KEYS_ACCOUNT a 
		SET
			a.key_name = #{keyName},
			a.key_code = #{keyCode},
			a.key_status = #{keyStatus},
			a.user_name = #{userName},
			a.pass_word = #{passWord},
			a.key_desc = #{keyDesc},
			a.login_address = #{loginAddress},
			a.sort = #{sort},
			a.create_time = #{createTime},
			a.update_time = #{updateTime} 
		WHERE 
			a.id = #{id}
	</update>
	
	<select id="findPaginationByName" resultType="com.smart.keys.model.po.Account">   
		SELECT 
			id, key_name keyName, key_code keyCode, key_status keyStatus, user_name userName, pass_word passWord, key_desc keyDesc, login_address loginAddress, 
			sort, create_time createTime, update_time updateTime 
     	FROM 
     		T_KEYS_ACCOUNT a
     	WHERE 
     		1 = 1
     		<if test="keyName != null and keyName != '' ">
				AND a.key_name like CONCAT('%',#{keyName},'%')
			</if>
     		ORDER BY a.sort DESC, a.create_time DESC 
	</select>
	
	<select id="findByCode" resultType="com.smart.keys.model.po.Account">   
		SELECT 
			id, key_name keyName, key_code keyCode, key_status keyStatus, user_name userName, pass_word passWord, key_desc keyDesc, login_address loginAddress, 
			sort, create_time createTime, update_time updateTime 
     	FROM 
     		T_KEYS_ACCOUNT a
     	WHERE 
     		1 = 1 AND a.key_code = #{keyCode, jdbcType = VARCHAR} 
	</select>
	
	<delete id="deleteById" parameterType="list" statementType="PREPARED">
		DELETE FROM T_KEYS_ACCOUNT
		<choose>
			<when test="list == null or list.size() == 0">
				WHERE 1 != 1
			</when>
			<when test="list.size() == 1">
				WHERE id = <foreach collection="list" item="id">#{id}</foreach>
			</when>
			<otherwise>
				WHERE id in <foreach collection="list" item="id" open="(" separator="," close=")">#{id}</foreach>
			</otherwise>
		</choose>
	</delete>
	
</mapper>